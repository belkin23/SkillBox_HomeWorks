using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Lesson4_Add_Ex3._1
{
    // * Задание 3.1
    // Заказчику требуется приложение позволяющщее умножать математическую матрицу на число
    // Справка https://ru.wikipedia.org/wiki/Матрица_(математика)
    // Справка https://ru.wikipedia.org/wiki/Матрица_(математика)#Умножение_матрицы_на_число
    // Добавить возможность ввода количество строк и столцов матрицы и число,
    // на которое будет производиться умножение.
    // Матрицы заполняются автоматически. 
    // Если по введённым пользователем данным действие произвести невозможно - сообщить об этом
    //
    // Пример
    //
    //      |  1  3  5  |   |  5  15  25  |
    //  5 х |  4  5  7  | = | 20  25  35  |
    //      |  5  3  1  |   | 25  15   5  |
    //
    //
    // ** Задание 3.2
    // Заказчику требуется приложение позволяющщее складывать и вычитать математические матрицы
    // Справка https://ru.wikipedia.org/wiki/Матрица_(математика)
    // Справка https://ru.wikipedia.org/wiki/Матрица_(математика)#Сложение_матриц
    // Добавить возможность ввода количество строк и столцов матрицы.
    // Матрицы заполняются автоматически
    // Если по введённым пользователем данным действие произвести невозможно - сообщить об этом
    //
    // Пример
    //  |  1  3  5  |   |  1  3  4  |   |  2   6   9  |
    //  |  4  5  7  | + |  2  5  6  | = |  6  10  13  |
    //  |  5  3  1  |   |  3  6  7  |   |  8   9   8  |
    //  
    //  
    //  |  1  3  5  |   |  1  3  4  |   |  0   0   1  |
    //  |  4  5  7  | - |  2  5  6  | = |  2   0   1  |
    //  |  5  3  1  |   |  3  6  7  |   |  2  -3  -6  |
    //
    // *** Задание 3.3
    // Заказчику требуется приложение позволяющщее перемножать математические матрицы
    // Справка https://ru.wikipedia.org/wiki/Матрица_(математика)
    // Справка https://ru.wikipedia.org/wiki/Матрица_(математика)#Умножение_матриц
    // Добавить возможность ввода количество строк и столцов матрицы.
    // Матрицы заполняются автоматически
    // Если по введённым пользователем данным действие произвести нельзя - сообщить об этом
    //  
    //  |  1  3  5  |   |  1  3  4  |   | 22  48  57  |
    //  |  4  5  7  | х |  2  5  6  | = | 35  79  95  |
    //  |  5  3  1  |   |  3  6  7  |   | 14  36  45  |
    //
    //  
    //                  | 4 |   
    //  |  1  2  3  | х | 5 | = | 32 |
    //                  | 6 |  
    //
    internal class Program
    {
        /// <summary>
        /// Умножение матрицы на число
        /// </summary>
        /// <param name="args"></param>
        static void Main(string[] args)
        {
            while (1 == 1)
            {
                int row = 0;    // Количество строк матрицы
                int col = 0;    // Количество столбцов матрицы
                int row2 = 0;    // Количество строк перемножаемой матрицы
                int col2 = 0;    // Количество столбцов перемножаемой матрицы
                int factor = 0; // Множитель матрицы
                int key = 0;    // Клавиша нажатая пользователем
                int alg = 0;    // Признак алгоритма

                Console.Clear();
                Console.WriteLine("\nВведите количество строк матрицы:");
                if (int.TryParse(Console.ReadLine(), out key))
                {
                    if (key > 0)
                    {
                        row = key; // Запоминаем количество строк матрицы
                    }

                    else
                    {
                        Console.WriteLine($"Вы ввели не верный символ. Введите целое число больше нуля.");
                        continue;
                    }
                }
                else
                {
                    Console.WriteLine($"Вы ввели не верный символ. Введите целое число больше нуля. Для продолжения нажмите Enter...");
                    Console.ReadLine();
                    continue;
                }
                Console.WriteLine("Введите количество столбцов матрицы:");
                if (int.TryParse(Console.ReadLine(), out key))
                {
                    if (key > 0)
                    {
                        col = key; // Запоминаем количество столбцов матрицы
                    }

                    else
                    {
                        Console.WriteLine($"Вы ввели не верный символ. Введите целое число больше нуля.");
                        continue;
                    }
                }
                else
                {
                    Console.WriteLine($"Вы ввели не верный символ. Введите целое число больше нуля. Для продолжения нажмите Enter...");
                    Console.ReadLine();
                    continue;
                }
                int[,] matrix = new int[row, col]; // Задание двумерного массива - матрицы, заданного пользователем размера
                Random random = new Random();  // Инициализируем переменную для генерации случайных чисел
                Console.WriteLine(); // Выводим пустую строку            

                while (1 == 1) // Организуем меню с операциями на матрицей
                {
                    Console.WriteLine("\nВыберите опрецию над матрицами:");
                    Console.WriteLine("\n[1] - умножение на число, [2] - сложение, [3] - вычитание, [4] - перемножение");
                    if (int.TryParse(Console.ReadLine(), out key))
                    {
                        if (key == 1)
                        {
                            alg = key; // Умножение на число
                            break;
                        }
                        else if (key == 2)
                        {
                            alg = key; // Сложение матриц
                            break;

                        }
                        else if (key == 3)
                        {
                            alg = key; // Вычитание матриц
                            break;
                        }
                        else if (key == 4)
                        {
                            alg = key; // Перемножение матриц
                            break;
                        }
                        else
                        {
                            Console.WriteLine($"Вы ввели не верный символ. Введите целое число от 1 до 4.");
                            continue;
                        }
                    }
                    else
                    {
                        Console.WriteLine($"Вы ввели не верный символ. Введите целое число. Для продолжения нажмите Enter...");
                        Console.ReadLine();
                        continue;
                    }
                }

                switch (alg) // Выпоняем выбранный алгоритм
                {
                    case 1: // Умножение матрицы на число
                        {
                            Console.WriteLine("Введите на какое число умножить матрицу:");
                            if (int.TryParse(Console.ReadLine(), out factor)) { }// Запоминаем множитель                    
                            else
                            {
                                Console.WriteLine($"Вы ввели не верный символ. Введите целое число. Для продолжения нажмите Enter...");
                                Console.ReadLine();
                                continue;
                            }

                            Console.WriteLine(); // Выводим пустую строку            

                            Console.WriteLine($"\nИсходная матрица {row} x {col}:\n");
                            for (int i = 0; i < row; i++) // Перебираем строки матрицы
                            {
                                for (int j = 0; j < col; j++) // Перебираем столбцы матрицы
                                {
                                    matrix[i, j] = random.Next(1, 10); // Заполняем матрицу случайными числами от 1 до 9
                                    Console.Write($"{matrix[i, j],-6} "); // Выводим матрицу на экран по ячейкам
                                }
                                Console.Write("\n");
                                //Console.WriteLine(); // Выводим пустую строку после каждой строки матрицы
                            }
                            Console.WriteLine($"\nИсходная матрица умноженная на {factor} = \n");
                            for (int i = 0; i < row; i++) // Перебираем строки матрицы
                            {
                                for (int j = 0; j < col; j++) // Перебираем столбцы матрицы
                                {
                                    matrix[i, j] = matrix[i, j] * factor; // Заполняем матрицу случайными числами от 0 до 9
                                    Console.Write($"{matrix[i, j],-6} "); // Выводим матрицу на экран по ячейкам
                                }
                                Console.Write("\n"); // Выводим пустую строку после каждой строки матрицы
                            }
                            break;
                        }
                    case 2: // Сложение матриц
                        {
                            Console.WriteLine(); // Выводим пустую строку            

                            Console.WriteLine($"\nИсходная матрица {row} x {col}:\n");
                            for (int i = 0; i < row; i++) // Перебираем строки матрицы
                            {
                                for (int j = 0; j < col; j++) // Перебираем столбцы матрицы
                                {
                                    matrix[i, j] = random.Next(1, 10); // Заполняем матрицу случайными числами от 1 до 9
                                    Console.Write($"{matrix[i, j],-6} "); // Выводим матрицу на экран по ячейкам
                                }
                                Console.Write("\n");
                            }
                            int[,] matrix2 = new int[row, col]; // Задание двумерного массива - матрицы, заданного пользователем размера

                            Console.WriteLine("\nМатрица которую суммируем с исходной:\n");
                            for (int i = 0; i < row; i++) // Перебираем строки матрицы
                            {
                                for (int j = 0; j < col; j++) // Перебираем столбцы матрицы
                                {
                                    matrix2[i, j] = random.Next(1, 10); // Заполняем матрицу случайными числами от 1 до 9
                                    Console.Write($"{matrix2[i, j],-6} "); // Выводим матрицу на экран по ячейкам
                                }
                                Console.Write("\n");
                            }

                            Console.WriteLine($"\nСумма матриц = \n");
                            for (int i = 0; i < row; i++) // Перебираем строки матрицы
                            {
                                for (int j = 0; j < col; j++) // Перебираем столбцы матрицы
                                {
                                    matrix[i, j] = matrix[i, j] + matrix2[i, j]; // Заполняем матрицу случайными числами от 0 до 9
                                    Console.Write($"{matrix[i, j],-6} "); // Выводим матрицу на экран по ячейкам
                                }
                                Console.Write("\n"); // Выводим пустую строку после каждой строки матрицы
                            }
                            break;
                        }
                    case 3: // Вычитание матриц
                        {
                            Console.WriteLine(); // Выводим пустую строку            

                            Console.WriteLine($"\nИсходная матрица {row} x {col}:\n");
                            for (int i = 0; i < row; i++) // Перебираем строки матрицы
                            {
                                for (int j = 0; j < col; j++) // Перебираем столбцы матрицы
                                {
                                    matrix[i, j] = random.Next(1, 10); // Заполняем матрицу случайными числами от 1 до 9
                                    Console.Write($"{matrix[i, j],-6} "); // Выводим матрицу на экран по ячейкам
                                }
                                Console.Write("\n");
                            }
                            int[,] matrix2 = new int[row, col]; // Задание двумерного массива - матрицы, заданного пользователем размера

                            Console.WriteLine("\nМатрица которую вычитаем из исходной:\n");
                            for (int i = 0; i < row; i++) // Перебираем строки матрицы
                            {
                                for (int j = 0; j < col; j++) // Перебираем столбцы матрицы
                                {
                                    matrix2[i, j] = random.Next(1, 10); // Заполняем матрицу случайными числами от 1 до 9
                                    Console.Write($"{matrix2[i, j],-6} "); // Выводим матрицу на экран по ячейкам
                                }
                                Console.Write("\n");
                            }

                            Console.WriteLine($"\nРазница матриц = \n");
                            for (int i = 0; i < row; i++) // Перебираем строки матрицы
                            {
                                for (int j = 0; j < col; j++) // Перебираем столбцы матрицы
                                {
                                    matrix[i, j] = matrix[i, j] - matrix2[i, j]; // Заполняем матрицу случайными числами от 0 до 9
                                    Console.Write($"{matrix[i, j], -6} "); // Выводим матрицу на экран по ячейкам
                                }
                                Console.Write("\n"); // Выводим пустую строку после каждой строки матрицы
                            }
                            break;
                        }
                    case 4: // Перемножение матриц
                        {
                            Console.WriteLine(); // Выводим пустую строку
                                                 // 
                            Console.WriteLine($"\nИсходная матрица {row} x {col}:\n");
                            for (int i = 0; i < row; i++) // Перебираем строки матрицы
                            {
                                for (int j = 0; j < col; j++) // Перебираем столбцы матрицы
                                {
                                    matrix[i, j] = random.Next(1, 10); // Заполняем матрицу случайными числами от 1 до 9
                                    Console.Write($"{matrix[i, j],-6} "); // Выводим матрицу на экран по ячейкам
                                }
                                Console.Write("\n");
                            }                           

                            while (1 == 1)
                            {
                                Console.WriteLine($"\nВведите количество строк матрицы на которую перемножаем (должно быть равным количеству столбцов исходной матрицы = {col}):");
                                if (int.TryParse(Console.ReadLine(), out key))
                                {
                                    if (key > 0 && key == col)
                                    {
                                        row2 = key; // Запоминаем количество строк матрицы
                                    }

                                    else
                                    {
                                        //Console.WriteLine($"Вы ввели не верный символ. Введите целое число больше нуля.");
                                        continue;
                                    }
                                }
                                else
                                {
                                    Console.WriteLine($"Вы ввели не верный символ. Введите целое число больше нуля. Для продолжения нажмите Enter...");
                                    Console.ReadLine();
                                    continue;
                                }
                                Console.WriteLine("Введите количество столбцов матрицы на которую перемножаем:");
                                if (int.TryParse(Console.ReadLine(), out key))
                                {
                                    if (key > 0)
                                    {
                                        col2 = key; // Запоминаем количество столбцов матрицы
                                        break;
                                    }

                                    else
                                    {
                                        Console.WriteLine($"Вы ввели не верный символ. Введите целое число больше нуля.");
                                        continue;
                                    }
                                }
                                else
                                {
                                    Console.WriteLine($"Вы ввели не верный символ. Введите целое число больше нуля. Для продолжения нажмите Enter...");
                                    Console.ReadLine();
                                    continue;
                                }
                            }
                            int[,] matrix2 = new int[row2, col2];
                            Console.WriteLine($"\nМатрица которую перемножаем с исходной {row2} x {col2}:\n");
                            for (int i = 0; i < row2; i++)                   // Перебираем строки матрицы
                            {
                                for (int j = 0; j < col2; j++)               // Перебираем столбцы матрицы
                                {
                                    matrix2[i, j] = random.Next(1, 10);    // Заполняем матрицу случайными числами от 1 до 9
                                    Console.Write($"{matrix2[i, j],-6} "); // Выводим матрицу на экран по ячейкам
                                }
                                Console.Write("\n");
                            }

                            int[,] resmatrix = new int[row, col2];
                            Console.WriteLine($"\nПроизведение матриц {row} x {col2} = \n");
                            for (int i = 0; i < row; i++)                           // Перебираем строки матрицы
                            {
                                for (int j = 0; j < col2; j++)                       // Перебираем столбцы матрицы
                                {                                    
                                    for (int k = 0; k < row2; k++)
                                    {
                                       resmatrix[i, j] += matrix[i, k] * matrix2[k, j];
                                    }
                                    Console.Write($"{resmatrix[i, j], -6} ");       // Выводим матрицу на экран по ячейкам
                                }
                                Console.Write("\n");                                // Выводим пустую строку после каждой строки матрицы
                            }
                            
                            break;
                        }
                    default:
                        {
                            break;
                        }

                }
                Console.WriteLine("\nНажмите [1] - Расчитать другую матрицу? [любая другая кнопка] - Выход ");
                if (Console.ReadKey().Key != ConsoleKey.D1) break;
            }
        }
    }
}
